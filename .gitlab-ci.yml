#image: dumux-precice:3.3git-iterative-pr-2.2.0
#image: dumux-precice:3.3-2.2.1
image: ub2004-style-check:clang-10


stages:
    - check
    - build
    - test

check-style-clang-10:
    stage: check
    script:
        - ./scripts/format/run-clang-format.sh
        - git diff > style-patch.diff
        - if [ -s style-patch.diff ]; then echo "Download the style patch as artifact and apply it or run ./scripts/format/run-clang-format.sh and commit again."; false; fi
    needs: []
    artifacts:
        when: on_failure
        paths:
            - style-patch.diff
        expire_in: 2 days

check-style-black:
    stage: check
    script:
        - sudo apt-get update && sudo apt-get install -y python3 python3-distutils python-is-python3 wget
        - wget https://bootstrap.pypa.io/get-pip.py && python get-pip.py && rm get-pip.py && ln -sf ${HOME}/.local/bin/pip3 ${HOME}/.local/bin/pip && export PATH="${HOME}/.local/bin":"${PATH}" && pip install black
        - black .
        - git diff > python-style-patch.diff
        - if [ -s python-style-patch.diff ]; then echo "Download the style patch as artifact and apply it or run black . and commit again."; false; fi
    needs: []
    artifacts:
        when: on_failure
        paths:
            - python-style-patch.diff
        expire_in: 2 days

.build_template: &build-tests
  stage: build
  script:
    - cd ..
    - export DUNE_CONTROL_PATH=${PWD}/dumux-precice:${DUNE_CONTROL_PATH}
    - cd dumux-precice/
    - echo $DUNE_CONTROL_PATH
    - dunecontrol --only=dumux-precice --opts=./test/cmake-test.opts all
    - cd build-cmake/
    - make -j2 build_tests
  artifacts:
    expire_in: 3 hours
    paths:
      - build-cmake/

build-tests:3.3-2.2.1:
  image: ub2004-dumux-precice:3.3-2.2.1
  <<: *build-tests
  rules:
    - if: '$CI_NIGHTLY_BUILD == "TRUE"'

build-tests:3.4-2.2.1:
  image: ub2004-dumux-precice:3.4-2.2.1
  <<: *build-tests

build-tests:3.4-2.3.0:
  image: ub2004-dumux-precice:3.4-2.3.0
  <<: *build-tests

build-tests:master-2.2.1:
  image: dumux-precice:master-2.2.1
  rules:
    - if: '$CI_NIGHTLY_BUILD == "TRUE"'
  <<: *build-tests
  allow_failure: true

.test_template: &test-partitioned-cases
  stage: test
  script:
    - cd build-cmake/
    - CTEST_OUTPUT_ON_FAILURE=1 ctest -j1 -L ^partitioned$
  artifacts:
    expire_in: 2 days
    when: on_failure
    paths:
      - build-cmake/

test-partitioned:3.3-2.2.1:
  image: ub2004-dumux-precice:3.3-2.2.1
  <<: *test-partitioned-cases
  rules:
    - if: '$CI_NIGHTLY_BUILD == "TRUE"'
  needs:
    - build-tests:3.3-2.2.1

test-partitioned:3.4-2.2.1:
  image: ub2004-dumux-precice:3.4-2.2.1
  <<: *test-partitioned-cases
  needs:
    - build-tests:3.4-2.2.1

test-partitioned:3.4-2.3.0:
  image: ub2004-dumux-precice:3.4-2.3.0
  <<: *test-partitioned-cases
  needs:
    - build-tests:3.4-2.3.0

test-partitioned:master-2.2.1:
  image: ub2004-dumux-precice:master-2.2.1
  <<: *test-partitioned-cases
  rules:
    - if: '$CI_NIGHTLY_BUILD == "TRUE"'
  needs:
    - build-tests:master-2.2.1
  allow_failure: true

.test_template: &test-monolithic-cases
  stage: test
  script:
    - cd build-cmake
    - CTEST_OUTPUT_ON_FAILURE=1 ctest -j2 -L ^monolithic$
  artifacts:
    expire_in: 2 days
    when: on_failure
    paths:
      - build-cmake/

test-monolithic:3.3-2.2.1:
  image: ub2004-dumux-precice:3.3-2.2.1
  <<: *test-monolithic-cases
  needs:
    - build-tests:3.3-2.2.1
  rules:
    - if: '$CI_NIGHTLY_BUILD == "TRUE"'

test-monolithic:3.4-2.2.1:
  image: ub2004-dumux-precice:3.4-2.2.1
  <<: *test-monolithic-cases
  needs:
    - build-tests:3.4-2.2.1

test-monolithic:3.4-2.3.0:
  image: ub2004-dumux-precice:3.4-2.3.0
  <<: *test-monolithic-cases
  needs:
    - build-tests:3.4-2.3.0

test-monolithic:master-2.2.1:
  image: ub2004-dumux-precice:master-2.2.1
  <<: *test-monolithic-cases
  rules:
    - if: '$CI_NIGHTLY_BUILD == "TRUE"'
  needs:
    - build-tests:master-2.2.1
  allow_failure: true
