
###         #   #        # #                            
#  #  #  #  ## ##  #  #   #                             
#  #  #  #  # # #  #  #  # #                            
###    ##   #   #   ##                                  
                                                        
Dune for Multi-{ Phase,                                 
                 Component,                             
                 Scale,                                 
                 Physics,                               
                 ...} flow and transport in porous media

Reading parameters from file ./params-navierstokesdarcy.input.
(0) 22:39:32 [impl::SolverInterfaceImpl]:107 in configure: [0mThis is preCICE version 1.6.1
(0) 22:39:32 [impl::SolverInterfaceImpl]:108 in configure: [0mRevision info: v1.6.1
(0) 22:39:32 [impl::SolverInterfaceImpl]:109 in configure: [0mConfiguring preCICE with configuration: "./precice-config-si-stokes-second.xml"
(0) 22:39:32 [impl::SolverInterfaceImpl]:152 in configure: [0mRun in coupling mode
2  2
(0) 22:39:32 [impl::SolverInterfaceImpl]:220 in initialize: [0mSetting up master communication to coupling partner/s
(0) 22:39:32 [impl::SolverInterfaceImpl]:228 in initialize: [0mMasters are connected
(0) 22:39:32 [partition::ReceivedPartition]:35 in communicate: [0mReceive global mesh DarcyMesh
(0) 22:39:32 [partition::ProvidedPartition]:79 in compute: [0mCompute partition for mesh FreeFlowMesh
(0) 22:39:32 [impl::SolverInterfaceImpl]:232 in initialize: [0mSetting up slaves communication to coupling partner/s
(0) 22:39:32 [impl::SolverInterfaceImpl]:240 in initialize: [0mSlaves are connected
(0) 22:39:32 [impl::SolverInterfaceImpl]:266 in initialize: [0mit 1 of 100 | dt# 1 | t 0 of 1 | dt 1 | max dt 1 | ongoing yes | dt complete no | write-initial-data | write-iteration-checkpoint | 
Writing output for problem "navierstokes-iterative". Took 0.0097 seconds.
(0) 22:39:32 [impl::SolverInterfaceImpl]:1414 in mapWrittenData: [0mCompute write mapping from mesh "FreeFlowMesh" to mesh "DarcyMesh".
(0) 22:39:32 [impl::SolverInterfaceImpl]:1465 in mapReadData: [0mCompute read mapping from mesh "DarcyMesh" to mesh "FreeFlowMesh".
Instantiated assembler for a stationary problem.

Newton solver configured with the following options and parameters:
 -- Newton.EnableShiftCriterion = true (relative shift convergence criterion)
 -- Newton.MaxRelativeShift = 1e-08
 -- Newton.MinSteps = 2
 -- Newton.MaxSteps = 18
 -- Newton.TargetSteps = 10
 -- Newton.RetryTimeStepReductionFactor = 0.5
 -- Newton.MaxTimeStepDivisions = 10

Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  1 done, maximum relative shift = 1.2500e-02
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  2 done, maximum relative shift = 1.8195e-08
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  3 done, maximum relative shift = 6.2316e-09
Assemble/solve/update time: 0.086(33.60%)/0.17(64.99%)/0.0036(1.41%)
Writing output for problem "navierstokes-iterative". Took 0.016 seconds.
(0) 22:39:32 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mrelative convergence measure: two-norm diff = 0.00036512, relative limit = 3.6512e-10, conv = false
(0) 22:39:32 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mrelative convergence measure: two-norm diff = 0, relative limit = 0, conv = true
(0) 22:39:32 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mabsolute convergence measure: two-norm diff = 0.00036512, limit = 1e-08, conv = false
(0) 22:39:32 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mabsolute convergence measure: two-norm diff = 0, limit = 1e-08, conv = true
(0) 22:39:32 [impl::SolverInterfaceImpl]:390 in advance: [0mit 2 of 100 | dt# 1 | t 0 of 1 | dt 1 | max dt 1 | ongoing yes | dt complete no | read-iteration-checkpoint | 
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  1 done, maximum relative shift = 1.2500e-02
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  2 done, maximum relative shift = 1.8308e-05
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  3 done, maximum relative shift = 4.4150e-07
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  4 done, maximum relative shift = 6.0084e-08
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  5 done, maximum relative shift = 1.8788e-11
Assemble/solve/update time: 0.12(34.07%)/0.23(64.76%)/0.0042(1.17%)
Writing output for problem "navierstokes-iterative". Took 0.0086 seconds.
(0) 22:39:33 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mrelative convergence measure: two-norm diff = 0.000328916, relative limit = 3.65428e-10, conv = false
(0) 22:39:33 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mrelative convergence measure: two-norm diff = 6.19228e-08, relative limit = 6.19228e-14, conv = false
(0) 22:39:33 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mabsolute convergence measure: two-norm diff = 0.000328916, limit = 1e-08, conv = false
(0) 22:39:33 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mabsolute convergence measure: two-norm diff = 6.19228e-08, limit = 1e-08, conv = false
(0) 22:39:33 [impl::SolverInterfaceImpl]:390 in advance: [0mit 3 of 100 | dt# 1 | t 0 of 1 | dt 1 | max dt 1 | ongoing yes | dt complete no | read-iteration-checkpoint | 
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  1 done, maximum relative shift = 1.2500e-02
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  2 done, maximum relative shift = 1.6228e-04
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  3 done, maximum relative shift = 2.6254e-05
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  4 done, maximum relative shift = 7.2674e-08
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  5 done, maximum relative shift = 6.1057e-11
Assemble/solve/update time: 0.12(33.86%)/0.23(64.90%)/0.0043(1.25%)
Writing output for problem "navierstokes-iterative". Took 0.0086 seconds.
(0) 22:39:33 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mrelative convergence measure: two-norm diff = 6.2539e-08, relative limit = 3.68178e-10, conv = false
(0) 22:39:33 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mrelative convergence measure: two-norm diff = 5.56642e-07, relative limit = 6.1855e-13, conv = false
(0) 22:39:33 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mabsolute convergence measure: two-norm diff = 6.2539e-08, limit = 1e-08, conv = false
(0) 22:39:33 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mabsolute convergence measure: two-norm diff = 5.56642e-07, limit = 1e-08, conv = false
(0) 22:39:33 [impl::SolverInterfaceImpl]:390 in advance: [0mit 4 of 100 | dt# 1 | t 0 of 1 | dt 1 | max dt 1 | ongoing yes | dt complete no | read-iteration-checkpoint | 
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  1 done, maximum relative shift = 1.2500e-02
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  2 done, maximum relative shift = 1.6219e-04
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  3 done, maximum relative shift = 2.6440e-05
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  4 done, maximum relative shift = 3.8590e-08
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  5 done, maximum relative shift = 2.9960e-11
Assemble/solve/update time: 0.12(33.25%)/0.25(65.49%)/0.0048(1.27%)
Writing output for problem "navierstokes-iterative". Took 0.0089 seconds.
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mrelative convergence measure: two-norm diff = 1.50077e-09, relative limit = 3.68177e-10, conv = false
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mrelative convergence measure: two-norm diff = 3.51879e-10, relative limit = 6.1851e-13, conv = false
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mabsolute convergence measure: two-norm diff = 1.50077e-09, limit = 1e-08, conv = true
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mabsolute convergence measure: two-norm diff = 3.51879e-10, limit = 1e-08, conv = true
(0) 22:39:34 [impl::SolverInterfaceImpl]:390 in advance: [0mit 5 of 100 | dt# 1 | t 0 of 1 | dt 1 | max dt 1 | ongoing yes | dt complete no | read-iteration-checkpoint | 
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  1 done, maximum relative shift = 1.2500e-02
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  2 done, maximum relative shift = 1.6214e-04
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  3 done, maximum relative shift = 2.6501e-05
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  4 done, maximum relative shift = 5.0945e-08
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  5 done, maximum relative shift = 2.0079e-11
Assemble/solve/update time: 0.12(33.97%)/0.23(64.82%)/0.0042(1.21%)
Writing output for problem "navierstokes-iterative". Took 0.0089 seconds.
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mrelative convergence measure: two-norm diff = 3.0405e-11, relative limit = 3.68177e-10, conv = true
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mrelative convergence measure: two-norm diff = 1.02514e-11, relative limit = 6.1851e-13, conv = false
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mabsolute convergence measure: two-norm diff = 3.0405e-11, limit = 1e-08, conv = true
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mabsolute convergence measure: two-norm diff = 1.02514e-11, limit = 1e-08, conv = true
(0) 22:39:34 [impl::SolverInterfaceImpl]:390 in advance: [0mit 6 of 100 | dt# 1 | t 0 of 1 | dt 1 | max dt 1 | ongoing yes | dt complete no | read-iteration-checkpoint | 
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  1 done, maximum relative shift = 1.2500e-02
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  2 done, maximum relative shift = 1.6215e-04
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  3 done, maximum relative shift = 2.6445e-05
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  4 done, maximum relative shift = 5.0738e-08
Assemble: r(x^k) = dS/dt + div F - q;   M = grad rSolve: M deltax^k = r[KUpdate: x^(k+1) = x^k - deltax^k[KNewton iteration  5 done, maximum relative shift = 2.4884e-11
Assemble/solve/update time: 0.12(34.73%)/0.22(64.00%)/0.0044(1.26%)
Writing output for problem "navierstokes-iterative". Took 0.0088 seconds.
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mrelative convergence measure: two-norm diff = 1.14009e-12, relative limit = 3.68177e-10, conv = true
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mrelative convergence measure: two-norm diff = 2.74511e-13, relative limit = 6.1851e-13, conv = true
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mabsolute convergence measure: two-norm diff = 1.14009e-12, limit = 1e-08, conv = true
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:673 in measureConvergence: [0mabsolute convergence measure: two-norm diff = 2.74511e-13, limit = 1e-08, conv = true
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:677 in measureConvergence: [0mAll converged
(0) 22:39:34 [cplscheme::BaseCouplingScheme]:855 in timestepCompleted: [0mTimestep completed
(0) 22:39:34 [impl::SolverInterfaceImpl]:390 in advance: [0mit 1 of 100 | dt# 2 | t 1 of 1 | dt 1 | max dt 1 | ongoing no | dt complete yes | 
Writing output for problem "navierstokes-iterative". Took 0.0092 seconds.
Run finished at Thu Aug  5 22:39:34 2021
Global runtime       = 2376ms / 2.376s
Number of processors = 1
# Rank: 0

                                                                               Event |      Count |  Total[ms] |    Max[ms] |    Min[ms] |    Avg[ms] | Time Ratio |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                             _GLOBAL |          1 |       2376 |       2376 |       2376 |       2376 |          1 |
                                                                             advance |          6 |        210 |         77 |          0 |         35 |     0.0884 |
                                                advance/cpl.computeQuasiNewtonUpdate |          5 |          0 |          0 |          0 |          0 |          0 |
                                  advance/map.nn.mapData.FromDarcyMeshToFreeFlowMesh |          5 |          0 |          0 |          0 |          0 |          0 |
                                  advance/map.nn.mapData.FromFreeFlowMeshToDarcyMesh |          6 |          0 |          0 |          0 |          0 |          0 |
                                                                           configure |          1 |          0 |          0 |          0 |          0 |          0 |
                                                                            finalize |          1 |         10 |         10 |         10 |         10 |    0.00421 |
                                                                          initialize |          1 |          2 |          2 |          2 |          2 |   0.000842 |
                                              initialize/m2n.requestMasterConnection |          1 |          1 |          1 |          1 |          1 |   0.000421 |
                                              initialize/m2n.requestSlavesConnection |          1 |          0 |          0 |          0 |          0 |          0 |
                                      initialize/partition.feedbackMesh.FreeFlowMesh |          1 |          0 |          0 |          0 |          0 |          0 |
                                    initialize/partition.receiveGlobalMesh.DarcyMesh |          1 |          0 |          0 |          0 |          0 |          0 |
                                                                      initializeData |          1 |         24 |         24 |         24 |         24 |     0.0101 |
                    initializeData/map.nn.computeMapping.FromDarcyMeshToFreeFlowMesh |          1 |          0 |          0 |          0 |          0 |          0 |
 initializeData/map.nn.computeMapping.FromDarcyMeshToFreeFlowMesh.getIndexOnVertices |          1 |          0 |          0 |          0 |          0 |          0 |
                    initializeData/map.nn.computeMapping.FromFreeFlowMeshToDarcyMesh |          1 |          0 |          0 |          0 |          0 |          0 |
 initializeData/map.nn.computeMapping.FromFreeFlowMeshToDarcyMesh.getIndexOnVertices |          1 |          0 |          0 |          0 |          0 |          0 |
                           initializeData/map.nn.mapData.FromDarcyMeshToFreeFlowMesh |          1 |          0 |          0 |          0 |          0 |          0 |
                           initializeData/map.nn.mapData.FromFreeFlowMeshToDarcyMesh |          1 |          0 |          0 |          0 |          0 |          0 |
                                                                      solver.advance |          6 |       1834 |        385 |          9 |        305 |      0.772 |
                                                                   solver.initialize |          1 |        294 |        294 |        294 |        294 |      0.124 |


                                                                                Name |        Max |  MaxOnRank |        Min |  MinOnRank |    Min/Max |
-------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                             _GLOBAL |       2376 |          0 |       2376 |          0 |          1 |
                                                                             advance |         77 |          0 |          0 |          0 |          0 |
                                                advance/cpl.computeQuasiNewtonUpdate |          0 |          0 |          0 |          0 |          0 |
                                  advance/map.nn.mapData.FromDarcyMeshToFreeFlowMesh |          0 |          0 |          0 |          0 |          0 |
                                  advance/map.nn.mapData.FromFreeFlowMeshToDarcyMesh |          0 |          0 |          0 |          0 |          0 |
                                                                           configure |          0 |          0 |          0 |          0 |          0 |
                                                                            finalize |         10 |          0 |         10 |          0 |          1 |
                                                                          initialize |          2 |          0 |          2 |          0 |          1 |
                                              initialize/m2n.requestMasterConnection |          1 |          0 |          1 |          0 |          1 |
                                              initialize/m2n.requestSlavesConnection |          0 |          0 |          0 |          0 |          0 |
                                      initialize/partition.feedbackMesh.FreeFlowMesh |          0 |          0 |          0 |          0 |          0 |
                                    initialize/partition.receiveGlobalMesh.DarcyMesh |          0 |          0 |          0 |          0 |          0 |
                                                                      initializeData |         24 |          0 |         24 |          0 |          1 |
                    initializeData/map.nn.computeMapping.FromDarcyMeshToFreeFlowMesh |          0 |          0 |          0 |          0 |          0 |
 initializeData/map.nn.computeMapping.FromDarcyMeshToFreeFlowMesh.getIndexOnVertices |          0 |          0 |          0 |          0 |          0 |
                    initializeData/map.nn.computeMapping.FromFreeFlowMeshToDarcyMesh |          0 |          0 |          0 |          0 |          0 |
 initializeData/map.nn.computeMapping.FromFreeFlowMeshToDarcyMesh.getIndexOnVertices |          0 |          0 |          0 |          0 |          0 |
                           initializeData/map.nn.mapData.FromDarcyMeshToFreeFlowMesh |          0 |          0 |          0 |          0 |          0 |
                           initializeData/map.nn.mapData.FromFreeFlowMeshToDarcyMesh |          0 |          0 |          0 |          0 |          0 |
                                                                      solver.advance |        385 |          0 |          9 |          0 |  0.0233766 |
                                                                   solver.initialize |        294 |          0 |        294 |          0 |          1 |

# Runtime-specified parameters used:
[ Darcy ]
[ Darcy.Grid ]
LowerLeft = "0 0"
UpperRight = "1 1"
[ Darcy.SpatialParams ]
AlphaBeaversJoseph = "1.0"
Permeability = "1e-6"
[ FreeFlow ]
EnableUnsymmetrizedVelocityGradientForBeaversJoseph = "false"
[ FreeFlow.Grid ]
Cells = "40 40"
LowerLeft = "0 1"
UpperRight = "1 2"
[ FreeFlow.Problem ]
EnableInertiaTerms = "true"
Name = "navierstokes-iterative"
PressureDifference = "1e-4"
[ Problem ]
EnableGravity = "false"
[ Vtk ]
AddVelocity = "1"

# Global default parameters used:
[ Assembly ]
NumericDifferenceMethod = "1"
[ Flux ]
UpwindWeight = "1.0"
[ Newton ]
EnableAbsoluteResidualCriterion = "false"
EnableChop = "false"
EnablePartialReassembly = "false"
EnableResidualCriterion = "false"
EnableShiftCriterion = "true"
MaxAbsoluteResidual = "1e-5"
MaxRelativeShift = "1e-8"
MaxSteps = "18"
MinSteps = "2"
ResidualReduction = "1e-5"
SatisfyResidualAndShiftCriterion = "false"
TargetSteps = "10"
UseLineSearch = "false"
[ Vtk ]
AddProcessRank = "true"

# Unused parameters:
 = "./precice-config-si-stokes-second.xml"
FreeFlow.Grid.Verbosity = "true"
FreeFlow.Grid.Grading1 = "1"
Darcy.Grid.Verbosity = "true"
Darcy.Grid.Cells = "40 40"
Darcy.Grid.Grading1 = "1"
Darcy.Problem.Name = "darcy-iterative"
Darcy.Problem.InitialP = "0.0e-9"
Darcy.SpatialParams.Porosity = "0.4"
Problem.Name = "fvca-iterative"
Problem.CouplingMode = "ReconstructFreeFlowNormalStress"

###         #   #        # #                            
#  #  #  #  ## ##  #  #   #                             
#  #  #  #  # # #  #  #  # #                            
###    ##   #   #   ##                                  
                                                        
Dune for Multi-{ Phase,                                 
                 Component,                             
                 Scale,                                 
                 Physics,                               
                 ...} flow and transport in porous media

